/**
* idpManager API Specification
* このドキュメントは、idpManagerのAPI仕様書です。
*
* The version of the OpenAPI document: 2.11.0.18
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package idpManager.srdm.api

import idpManager.srdm.model.CreateGroupReq
import idpManager.srdm.model.CreateGroupRsp
import idpManager.srdm.model.GetSRDMGroupListReq
import idpManager.srdm.model.GetSRDMGroupListRsp
import idpManager.srdm.model.RemoveGroupReq
import idpManager.srdm.model.RemoveGroupRsp

import idpManager.infrastructure.*
import kotlinx.serialization.UnstableDefault
import io.ktor.client.engine.HttpClientEngine
import io.ktor.client.features.json.serializer.KotlinxSerializer
import kotlinx.serialization.json.Json
import kotlinx.serialization.json.JsonConfiguration

class GroupFunctionsApi @UseExperimental(UnstableDefault::class) constructor(
    baseUrl: kotlin.String = "https://<<serviceAddress>>:8086/idpManager",
    httpClientEngine: HttpClientEngine? = null,
    serializer: KotlinxSerializer
) : ApiClient(baseUrl, httpClientEngine, serializer) {

    @UseExperimental(UnstableDefault::class)
    constructor(
        baseUrl: kotlin.String = "https://<<serviceAddress>>:8086/idpManager",
        httpClientEngine: HttpClientEngine? = null,
        jsonConfiguration: JsonConfiguration = JsonConfiguration.Default
    ) : this(baseUrl, httpClientEngine, KotlinxSerializer(Json(jsonConfiguration)))

    /**
     * グループ作成
     * IDP関連のグループ情報を作成する。&lt;br&gt; データベースの「IDP用グループ情報」に新たなグループ情報を作成し、デフォルトのスケジュールを設定する。&lt;br&gt; 現状は、内部からの呼び出しを想定。&lt;br&gt; 本APIの実行には、「グループ管理権限」が必要。
     * @param createGroupReq  
     * @return CreateGroupRsp
     */
    @Suppress("UNCHECKED_CAST")
    suspend fun groupCreateGroupPost(createGroupReq: CreateGroupReq): HttpResponse<CreateGroupRsp> {

        val localVariableAuthNames = listOf<String>("cookieAuth")

        val localVariableBody = createGroupReq

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig(
            RequestMethod.POST,
            "/group/createGroup",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * SRDM グループリストの取得
     * SRDMのグループリスト（グループ情報）を返す。&lt;br&gt; 対象となるグループタイプは、通常グループのみとする。（外部参照グループは、含まれない）&lt;br&gt;
     * @param getSRDMGroupListReq  
     * @return GetSRDMGroupListRsp
     */
    @Suppress("UNCHECKED_CAST")
    suspend fun groupGetSRDMGroupListPost(getSRDMGroupListReq: GetSRDMGroupListReq): HttpResponse<GetSRDMGroupListRsp> {

        val localVariableAuthNames = listOf<String>("cookieAuth")

        val localVariableBody = getSRDMGroupListReq

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig(
            RequestMethod.POST,
            "/group/getSRDMGroupList",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * グループ削除
     * IDP関連のグループ情報を削除する。&lt;br&gt; グループの削除に関する操作（ゴミ箱へ移動／元に戻す／ゴミ箱から削除）が行われたとき呼び出される。&lt;br&gt; 削除操作で実施する処理は、以下の通り。   - グループの属性を変更し、スケジュールの有効／無効を切り替える。&lt;br&gt;   - 指定グループから参照されているデバイスのグループ状態を変更する。&lt;br&gt;     リクエストパラメータにあるgroupIdListに指定されたgroupIdを持つデバイスのgroupListを更新する。&lt;br&gt;  現状は、内部からの呼び出しを想定。&lt;br&gt; 本APIの実行には、「グループ管理権限」が必要。
     * @param removeGroupReq  
     * @return RemoveGroupRsp
     */
    @Suppress("UNCHECKED_CAST")
    suspend fun groupRemoveGroupPost(removeGroupReq: RemoveGroupReq): HttpResponse<RemoveGroupRsp> {

        val localVariableAuthNames = listOf<String>("cookieAuth")

        val localVariableBody = removeGroupReq

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig(
            RequestMethod.POST,
            "/group/removeGroup",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }




    companion object {
        internal fun setMappers(serializer: KotlinxSerializer) {
            
            
            
        }
    }
}
