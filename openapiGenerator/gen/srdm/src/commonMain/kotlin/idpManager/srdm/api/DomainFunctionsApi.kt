/**
* idpManager API Specification
* このドキュメントは、idpManagerのAPI仕様書です。
*
* The version of the OpenAPI document: 2.11.0.18
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package idpManager.srdm.api

import idpManager.srdm.model.GetThemeSettingRsp
import idpManager.srdm.model.SetThemeSettingReq
import idpManager.srdm.model.SetThemeSettingRsp

import idpManager.infrastructure.*
import kotlinx.serialization.UnstableDefault
import io.ktor.client.engine.HttpClientEngine
import io.ktor.client.features.json.serializer.KotlinxSerializer
import kotlinx.serialization.json.Json
import kotlinx.serialization.json.JsonConfiguration

class DomainFunctionsApi @UseExperimental(UnstableDefault::class) constructor(
    baseUrl: kotlin.String = "https://<<serviceAddress>>:8086/idpManager",
    httpClientEngine: HttpClientEngine? = null,
    serializer: KotlinxSerializer
) : ApiClient(baseUrl, httpClientEngine, serializer) {

    @UseExperimental(UnstableDefault::class)
    constructor(
        baseUrl: kotlin.String = "https://<<serviceAddress>>:8086/idpManager",
        httpClientEngine: HttpClientEngine? = null,
        jsonConfiguration: JsonConfiguration = JsonConfiguration.Default
    ) : this(baseUrl, httpClientEngine, KotlinxSerializer(Json(jsonConfiguration)))

    /**
     * UIテーマ設定の取得
     * ログインアカウントが属するドメインに設定されているUIテーマを取得する。&lt;br&gt;
     * @param body  
     * @return GetThemeSettingRsp
     */
    @Suppress("UNCHECKED_CAST")
    suspend fun domainGetThemeSettingPost(body: kotlin.String): HttpResponse<GetThemeSettingRsp> {

        val localVariableAuthNames = listOf<String>("cookieAuth")

        val localVariableBody = body

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig(
            RequestMethod.POST,
            "/domain/getThemeSetting",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * UIテーマの設定
     * ログインアカウントが属するドメインのUIテーマを設定する。&lt;br&gt;
     * @param setThemeSettingReq  
     * @return SetThemeSettingRsp
     */
    @Suppress("UNCHECKED_CAST")
    suspend fun domainSetThemeSettingPost(setThemeSettingReq: SetThemeSettingReq): HttpResponse<SetThemeSettingRsp> {

        val localVariableAuthNames = listOf<String>("cookieAuth")

        val localVariableBody = setThemeSettingReq

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig(
            RequestMethod.POST,
            "/domain/setThemeSetting",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }




    companion object {
        internal fun setMappers(serializer: KotlinxSerializer) {
            
            
        }
    }
}
