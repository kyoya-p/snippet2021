/**
* idpManager API Specification
* このドキュメントは、idpManagerのAPI仕様書です。
*
* The version of the OpenAPI document: 2.11.0.18
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package idpManager.srdm.model

import idpManager.srdm.model.GetDeviceListReqOrderBy
import idpManager.srdm.model.GetDeviceListReqSimpleFilters

import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer

/**
 * 
 * @param groupId 対象グループのgroupId<br> ●チェック内容   - null、空文字はエラー
 * @param attribute 取得対象の属性   - managed：管理デバイス   - trash：削除済み（ゴミ箱内）のデバイス  ●チェック内容   - 指定値以外は、エラー
 * @param startIndex 開始インデックス<br> ●チェック内容   - 数値以外はエラー
 * @param count 要求件数<br> ●チェック内容   - 数値以外はエラー
 * @param filterId ユーザフィルターのfilterId
 * @param simpleFilters シンプルフィルター
 * @param orderBy ソート指定
 */
@Serializable
data class GetDeviceListReq (
    /* 対象グループのgroupId<br> ●チェック内容   - null、空文字はエラー */
    @SerialName(value = "groupId") @Required val groupId: kotlin.String,
    /* 取得対象の属性   - managed：管理デバイス   - trash：削除済み（ゴミ箱内）のデバイス  ●チェック内容   - 指定値以外は、エラー */
    @SerialName(value = "attribute") @Required val attribute: GetDeviceListReq.Attribute,
    /* 開始インデックス<br> ●チェック内容   - 数値以外はエラー */
    @SerialName(value = "startIndex") val startIndex: kotlin.Int? = null,
    /* 要求件数<br> ●チェック内容   - 数値以外はエラー */
    @SerialName(value = "count") val count: kotlin.Int? = null,
    /* ユーザフィルターのfilterId */
    @SerialName(value = "filterId") val filterId: kotlin.String? = null,
    /* シンプルフィルター */
    @SerialName(value = "simpleFilters") val simpleFilters: kotlin.collections.List<GetDeviceListReqSimpleFilters>? = null,
    /* ソート指定 */
    @SerialName(value = "orderBy") val orderBy: kotlin.collections.List<GetDeviceListReqOrderBy>? = null
) {

    /**
    * 取得対象の属性   - managed：管理デバイス   - trash：削除済み（ゴミ箱内）のデバイス  ●チェック内容   - 指定値以外は、エラー
    * Values: managed,trash
    */
    @Serializable(with = Attribute.Serializer::class)
    enum class Attribute(val value: kotlin.String){
        managed("managed"),
        trash("trash");

        object Serializer : CommonEnumSerializer<Attribute>("Attribute", values(), values().map { it.value.toString() }.toTypedArray())
    }
}

